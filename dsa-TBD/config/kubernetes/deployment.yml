# k apply -f deployment.yml -n usp-dev
# Docker Registry Secret
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  labels:
    io.iot.service: registry-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJld3IudnVsdHJjci5jb20iOnsiYXV0aCI6ImNtOWliM1FrWjJWdVpHOWpLekJrTmpaaFptVmpMV1EzTVdJdE5EUm1NUzFoWTJGbExXUm1NMlppTTJJNE56ZGlORG8yUVRSbVdXVmxjRkpGZEdKTlVGbzRSVVpOY25WWlZHRjVUMkpoY0Rjd09RPT0ifX19

---

# Secrets for sensitive information (PostgreSQL credentials)
apiVersion: v1
kind: Secret
metadata:
  name: iot-db-secret
  labels:
    io.iot.service: iot-db-secret
type: Opaque
data:
  POSTGRES_USER: dXNw  # Base64 encoded value for 'usp'
  POSTGRES_PASSWORD: YWRtaW5hZG1pbnVzcA==  # Base64 encoded value for 'adminadminusp'
  POSTGRES_DATABASE: aW90  # Base64 encoded value for 'iot'
  REGISTRY_PWD: eyJhdXRocyI6eyJld3IudnVsdHJjci5jb20iOnsiYXV0aCI6ImNtOWliM1FrWjJWdVpHOWpLekJrTmpaaFptVmpMV1EzTVdJdE5EUm1NUzFoWTJGbExXUm1NMlppTTJJNE56ZGlORG8yUVRSbVdXVmxjRkpGZEdKTlVGbzRSVVpOY25WWlZHRjVUMkpoY0Rjd09RPT0ifX19

---

# ConfigMap for other environment variables (non-sensitive)
apiVersion: v1
kind: ConfigMap
metadata:
  name: iot-env
  labels:
    io.iot.service: iot-env
data:
  ENVIRONMENT: PROD
  GIN_PORT: '8080'
  POSTGRES_HOST: postgres  # Referring to the PostgreSQL service within the cluster
  POSTGRES_PORT: '5432'
  REDIS_ADDRESS: redis:6379

---

# PersistentVolumeClaim for PostgreSQL data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  # Request 5Gi of persistent storage

---

# PostgreSQL Deployment with Persistent Storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_DATABASE
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data  # Mount persistent storage to PostgreSQL data directory
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc  # Use the PersistentVolumeClaim

---

# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres

---

# IoT Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-app
  labels:
    io.iot.service: iot-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.iot.service: iot-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.iot.network/app-network: "true"
        io.iot.service: iot-app
    spec:
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: registry-secret  
  
      containers:
        - name: gin-app
          # image: registry.gitlab.com/iot-global/backend/iot:v1
          image: ewr.vultrcr.com/gendoc/uspresearch24:latest
          
          # image: uspresearchdsaant24:latest  # Local image
          # imagePullPolicy: Never  # Instruct Kubernetes to use the local image
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: iot-env  # Non-sensitive environment variables
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_DATABASE
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always

---

# IoT Application Service
apiVersion: v1
kind: Service
metadata:
  name: iot-app
  labels:
    io.iot.service: iot-app
spec:
  ports:
    - name: "iot-app-service"
      port: 8080
      targetPort: 8080
  selector:
    io.iot.service: iot-app