# ===================================
# API DEPLOYMENT AND SERVICE
# Save as: config/kubernetes/api.yml
# ===================================

# Docker Registry Secret
apiVersion: v1
kind: Secret
metadata:
  name: vultr-cr-credentials
data:
  .dockerconfigjson: eyJhdXRocyI6eyJld3IudnVsdHJjci5jb20iOnsiYXV0aCI6ImNtOWliM1FrWjJWdVpHOWpLMkk0WVdZeE5HRXpMV1EwWlRVdE5EQmlNUzFpTXpZNExUSTFNV1EwTUdSbVlqTm1OVHBTTTI5WFdGQktOR1JCTXpWT2RITllURFZIWVdabFpEa3dWWEpNUlZCblRBPT0ifX19
type: kubernetes.io/dockerconfigjson

---

# ConfigMap for other environment variables (non-sensitive)
apiVersion: v1
kind: ConfigMap
metadata:
  name: iot-env
  labels:
    io.iot.service: iot-env
data:
  ENVIRONMENT: PROD
  GIN_PORT: '8080'
  POSTGRES_HOST: postgres  # Referring to the PostgreSQL service within the cluster
  POSTGRES_PORT: '5432'
  REDIS_ADDRESS: redis:6379

---

# IoT Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iot-app
  labels:
    io.iot.service: iot-app
spec:
  replicas: 3
  selector:
    matchLabels:
      io.iot.service: iot-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.iot.network/app-network: "true"
        io.iot.service: iot-app
    spec:
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: vultr-cr-credentials
  
      containers:
        - name: gin-app
          # image: registry.gitlab.com/iot-global/backend/iot:v1
          image: ewr.vultrcr.com/gendoc/uspresearch24:latest
          
          # image: uspresearchdsaant24:latest  # Local image
          # imagePullPolicy: Never  # Instruct Kubernetes to use the local image
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: iot-env  # Non-sensitive environment variables
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: iot-db-secret
                  key: POSTGRES_DATABASE
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always

---

# IoT Application Service
apiVersion: v1
kind: Service
metadata:
  name: iot-app
  labels:
    io.iot.service: iot-app
spec:
  # type: LoadBalancer
  ports:
    - name: "iot-app-service"
      port: 8080
      targetPort: 8080
  selector:
    io.iot.service: iot-app

---
# IoT Application Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iot-app-ingress
  namespace: usp-dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /  # Ensures paths are forwarded correctly
    nginx.ingress.kubernetes.io/load-balance: "round_robin"  # Load balancing
spec:
  ingressClassName: nginx  # Specify the NGINX Ingress Class
  rules:
    - host: iot-api.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: iot-app
                port:
                  number: 8080